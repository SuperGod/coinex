// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StatsHistory stats history
// swagger:model StatsHistory
type StatsHistory struct {

	// currency
	Currency string `json:"currency,omitempty"`

	// date
	// Required: true
	// Format: date-time
	Date *strfmt.DateTime `json:"date"`

	// root symbol
	// Required: true
	RootSymbol *string `json:"rootSymbol"`

	// turnover
	Turnover int64 `json:"turnover,omitempty"`

	// volume
	Volume int64 `json:"volume,omitempty"`
}

// Validate validates this stats history
func (m *StatsHistory) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRootSymbol(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StatsHistory) validateDate(formats strfmt.Registry) error {

	if err := validate.Required("date", "body", m.Date); err != nil {
		return err
	}

	if err := validate.FormatOf("date", "body", "date-time", m.Date.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *StatsHistory) validateRootSymbol(formats strfmt.Registry) error {

	if err := validate.Required("rootSymbol", "body", m.RootSymbol); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *StatsHistory) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StatsHistory) UnmarshalBinary(b []byte) error {
	var res StatsHistory
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
