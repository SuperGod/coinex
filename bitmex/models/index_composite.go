// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IndexComposite index composite
// swagger:model IndexComposite
type IndexComposite struct {

	// index symbol
	IndexSymbol string `json:"indexSymbol,omitempty"`

	// last price
	LastPrice float64 `json:"lastPrice,omitempty"`

	// logged
	// Format: date-time
	Logged strfmt.DateTime `json:"logged,omitempty"`

	// reference
	Reference string `json:"reference,omitempty"`

	// symbol
	Symbol string `json:"symbol,omitempty"`

	// timestamp
	// Required: true
	// Format: date-time
	Timestamp *strfmt.DateTime `json:"timestamp"`

	// weight
	Weight float64 `json:"weight,omitempty"`
}

// Validate validates this index composite
func (m *IndexComposite) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLogged(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IndexComposite) validateLogged(formats strfmt.Registry) error {

	if swag.IsZero(m.Logged) { // not required
		return nil
	}

	if err := validate.FormatOf("logged", "body", "date-time", m.Logged.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *IndexComposite) validateTimestamp(formats strfmt.Registry) error {

	if err := validate.Required("timestamp", "body", m.Timestamp); err != nil {
		return err
	}

	if err := validate.FormatOf("timestamp", "body", "date-time", m.Timestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *IndexComposite) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IndexComposite) UnmarshalBinary(b []byte) error {
	var res IndexComposite
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
