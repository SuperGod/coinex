// Code generated by go-swagger; DO NOT EDIT.

package order_book

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewOrderBookGetL2Params creates a new OrderBookGetL2Params object
// with the default values initialized.
func NewOrderBookGetL2Params() *OrderBookGetL2Params {
	var (
		depthDefault = int32(25)
	)
	return &OrderBookGetL2Params{
		Depth: &depthDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewOrderBookGetL2ParamsWithTimeout creates a new OrderBookGetL2Params object
// with the default values initialized, and the ability to set a timeout on a request
func NewOrderBookGetL2ParamsWithTimeout(timeout time.Duration) *OrderBookGetL2Params {
	var (
		depthDefault = int32(25)
	)
	return &OrderBookGetL2Params{
		Depth: &depthDefault,

		timeout: timeout,
	}
}

// NewOrderBookGetL2ParamsWithContext creates a new OrderBookGetL2Params object
// with the default values initialized, and the ability to set a context for a request
func NewOrderBookGetL2ParamsWithContext(ctx context.Context) *OrderBookGetL2Params {
	var (
		depthDefault = int32(25)
	)
	return &OrderBookGetL2Params{
		Depth: &depthDefault,

		Context: ctx,
	}
}

// NewOrderBookGetL2ParamsWithHTTPClient creates a new OrderBookGetL2Params object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewOrderBookGetL2ParamsWithHTTPClient(client *http.Client) *OrderBookGetL2Params {
	var (
		depthDefault = int32(25)
	)
	return &OrderBookGetL2Params{
		Depth:      &depthDefault,
		HTTPClient: client,
	}
}

/*OrderBookGetL2Params contains all the parameters to send to the API endpoint
for the order book get l2 operation typically these are written to a http.Request
*/
type OrderBookGetL2Params struct {

	/*Depth
	  Orderbook depth per side. Send 0 for full depth.

	*/
	Depth *int32
	/*Symbol
	  Instrument symbol. Send a series (e.g. XBT) to get data for the nearest contract in that series.

	*/
	Symbol string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the order book get l2 params
func (o *OrderBookGetL2Params) WithTimeout(timeout time.Duration) *OrderBookGetL2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the order book get l2 params
func (o *OrderBookGetL2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the order book get l2 params
func (o *OrderBookGetL2Params) WithContext(ctx context.Context) *OrderBookGetL2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the order book get l2 params
func (o *OrderBookGetL2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the order book get l2 params
func (o *OrderBookGetL2Params) WithHTTPClient(client *http.Client) *OrderBookGetL2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the order book get l2 params
func (o *OrderBookGetL2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDepth adds the depth to the order book get l2 params
func (o *OrderBookGetL2Params) WithDepth(depth *int32) *OrderBookGetL2Params {
	o.SetDepth(depth)
	return o
}

// SetDepth adds the depth to the order book get l2 params
func (o *OrderBookGetL2Params) SetDepth(depth *int32) {
	o.Depth = depth
}

// WithSymbol adds the symbol to the order book get l2 params
func (o *OrderBookGetL2Params) WithSymbol(symbol string) *OrderBookGetL2Params {
	o.SetSymbol(symbol)
	return o
}

// SetSymbol adds the symbol to the order book get l2 params
func (o *OrderBookGetL2Params) SetSymbol(symbol string) {
	o.Symbol = symbol
}

// WriteToRequest writes these params to a swagger request
func (o *OrderBookGetL2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Depth != nil {

		// query param depth
		var qrDepth int32
		if o.Depth != nil {
			qrDepth = *o.Depth
		}
		qDepth := swag.FormatInt32(qrDepth)
		if qDepth != "" {
			if err := r.SetQueryParam("depth", qDepth); err != nil {
				return err
			}
		}

	}

	// query param symbol
	qrSymbol := o.Symbol
	qSymbol := qrSymbol
	if qSymbol != "" {
		if err := r.SetQueryParam("symbol", qSymbol); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
